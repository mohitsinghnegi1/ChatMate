{"version":3,"sources":["config/config.js","services/Authentication.js","components/signup/SignUp.js","components/error/Error.js","components/context/Store.js","components/signin/SignIn.js","components/landingpage/Landingpage.js","config/PublicRoutes.js","components/conversation/Conversation.js","components/homepage/Messsage.js","components/homepage/ConversationBox.js","services/util.js","components/homepage/Home.js","components/homepage/Header.js","config/PrivateRoutes.js","App.js","serviceWorker.js","index.js","assets/img/logo.png","assets/img/user.png","assets/img/sender_avatar.jpg","assets/img/start_chat.svg"],"names":["config","USER_BASE_URL","CreateUser","userInfo","payload","a","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","errMsg","hasOwnProperty","error","code","className","props","history","push","changeState","submitText","errors","form","catch","message","SignUp","state","email","password","confpassword","username","SubmitForm","bind","isValid","onChange","test","String","toLowerCase","this","validateEmail","setState","stateInfo","e","preventDefault","target","name","value","style","background","src","logo","alt","class","noValidate","autoComplete","onSubmit","data-validate","id","type","placeholder","onClick","updateWidget","widgetName","Component","withRouter","Error","StoreContext","createContext","StoreProvider","user","parse","localStorage","getItem","isAuthenticated","token","useState","store","updateStore","Provider","children","SignIn","login","context","setItem","errorMsg","SignInUser","height","contextType","Widget","widget","Landingpage","PublicRoutes","exact","path","component","Conversation","setIsConversationOpen","avatar","Messsage","ReactEmoji","emojify","msg","ConversationBox","renderMessage","conversation","map","Fragment","GetReceivers","setReceivers1","cur_user","authorization","status","clear","window","location","href","receivers","filter","_id","Home","isCoversationOpen","setMessage","setReceivers","useEffect","sendMessage","event","receiver","otherInfo","getConversations","start_chat","onKeyPress","key","Header","useContext","setStore","prevStore","removeItem","Logout","PrivateRoutes","Route","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.edb67789.chunk.js","sourcesContent":["const config = {\r\n  USER_BASE_URL: 'http://localhost:5000/api/user',\r\n};\r\nexport default config;\r\n","import config from '../config/config';\r\nimport React from 'react';\r\nconst CreateUser = async (userInfo, payload) => {\r\n  // call create user api\r\n  console.log('create user called');\r\n  const response = await fetch(config.USER_BASE_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userInfo),\r\n  })\r\n    .then((response) => {\r\n      console.log('result ', response);\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      console.log('data ', data);\r\n      var errMsg;\r\n      if (data.hasOwnProperty('error')) {\r\n        if (data.error.code && data.error.code == 11000) {\r\n          errMsg = <div>Email or Username already exist</div>;\r\n        } else {\r\n          errMsg = data.error;\r\n        }\r\n      } else {\r\n        errMsg = (\r\n          <div className='text-success'>User Registered Successfully</div>\r\n        );\r\n        payload.props.history.push('/');\r\n      }\r\n      payload.changeState({\r\n        submitText: 'SignUp',\r\n        errors: { form: errMsg },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log('error while signup', error);\r\n      // Handle Errors here.\r\n      var errMsg = error.message;\r\n      payload.changeState({\r\n        submitText: 'SignUp',\r\n        errors: { form: errMsg },\r\n      });\r\n    });\r\n\r\n  // console.log('response', response);\r\n  return response;\r\n};\r\n\r\nconst SignInUser = (userInfo, payload) => {\r\n  // sign in user\r\n  console.log('signIn user called');\r\n  fetch(config.USER_BASE_URL + '/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userInfo),\r\n  })\r\n    .then((response) => {\r\n      console.log('result ', response);\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      console.log('data ', data);\r\n      if (data.hasOwnProperty('message')) {\r\n        var errMsg = <div className='text-success'>{data.message}</div>;\r\n        payload.changeState({\r\n          submitText: 'SingnIn',\r\n          errors: { form: errMsg },\r\n        });\r\n\r\n        //instead of storing it in localstorage we can store it in session\r\n        localStorage.setItem(\r\n          'user',\r\n          JSON.stringify({\r\n            isAuthenticated: true,\r\n            token: data.token,\r\n            userInfo: data.userInfo,\r\n          })\r\n        );\r\n        payload.updateStore({\r\n          ...payload.store,\r\n          user: {\r\n            isAuthenticated: true,\r\n            token: data.token,\r\n            userInfo: data.userInfo,\r\n          },\r\n        });\r\n      } else if (data.hasOwnProperty('errorMsg')) {\r\n        var errMsg = data.errorMsg;\r\n        payload.changeState({\r\n          submitText: 'SignIn',\r\n          errors: { form: errMsg },\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log('error while sigining in', error);\r\n      // Handle Errors here.\r\n      var errMsg = error.message;\r\n      payload.changeState({\r\n        submitText: 'SignIn',\r\n        errors: { form: errMsg },\r\n      });\r\n    });\r\n};\r\n\r\nconst Logout = (prevStore, setStore) => {\r\n  //clear cookie if you implement it using cookie else clear localstorage\r\n  localStorage.removeItem('user');\r\n  setStore({\r\n    ...prevStore,\r\n    user: {\r\n      isAuthenticated: false,\r\n      token: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport { CreateUser, SignInUser, Logout };\r\n","import React, { Component, isValidElement } from 'react';\r\nimport '../../assets/css/signin.css';\r\nimport { CreateUser } from '../../services/Authentication';\r\nimport logo from '.././../assets/img/logo.png';\r\nimport { withRouter } from 'react-router-dom';\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      confpassword: '',\r\n      username: '',\r\n      submitText: 'SIGNUP',\r\n      errors: {\r\n        email: null,\r\n        password: null,\r\n        confpassword: null,\r\n        username: null,\r\n        form: null,\r\n      },\r\n    };\r\n    this.SubmitForm = this.SubmitForm.bind(this);\r\n    this.isValid = this.isValid.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeState = this.changeState.bind(this);\r\n  }\r\n  validateEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  isValid() {\r\n    const { email, password, confpassword, username, errors } = this.state;\r\n    if (!email || !password || !username) {\r\n      this.setState({\r\n        errors: {\r\n          ...errors,\r\n          form: 'Please fill out required fields',\r\n        },\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({\r\n        errors: {\r\n          ...errors,\r\n          form: 'Invalid email Format',\r\n        },\r\n      });\r\n      return false;\r\n    }\r\n    if (password != confpassword) {\r\n      this.setState({\r\n        errors: {\r\n          ...errors,\r\n          form: 'Password not matched',\r\n        },\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  changeState(stateInfo) {\r\n    this.setState(stateInfo);\r\n  }\r\n\r\n  async SubmitForm(e) {\r\n    e.preventDefault();\r\n    if (this.isValid()) {\r\n      this.setState({\r\n        submitText: 'Loading',\r\n      });\r\n      console.log('call to signup api which will return promise');\r\n      const userInfo = {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        confpassword: this.state.confpassword,\r\n      };\r\n\r\n      var response = await CreateUser(userInfo, {\r\n        changeState: this.changeState,\r\n        props: this.props,\r\n      });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    const { name, value } = e.target;\r\n    // console.log('name', name, 'val', value);\r\n    this.setState({ [name]: value });\r\n    // console.log(this.state);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='row vw-100 ml-0 mr-0' style={{ background: '#13273B' }}>\r\n        <div className='text-white logo'>\r\n          <img src={logo} className='ml-5 pl-3 ' alt='calendly' />\r\n          Chat Mate\r\n        </div>\r\n        <div class='login100-more back col-lg-7 d-none d-lg-block'></div>\r\n\r\n        <form\r\n          noValidate\r\n          autoComplete='none'\r\n          class='login100-form validate-form col-lg-5 pt-0 pb-0  pl-md-5 pr-md-5 d-flex '\r\n          onSubmit={this.SubmitForm}>\r\n          <div className='pl-md-5 pr-md-5'>\r\n            <span class='login100-form-title p-b-34'>Create Account</span>\r\n\r\n            <div className='error text-center mb-3'>\r\n              {this.state.errors.form}\r\n            </div>\r\n            <div className=''>\r\n              <div\r\n                class='wrap-input100 rs1-wrap-input100 validate-input m-b-20'\r\n                data-validate='Type user name'>\r\n                <input\r\n                  autoComplete='none'\r\n                  id='username'\r\n                  class='input100'\r\n                  type='text'\r\n                  name='username'\r\n                  placeholder='Username'\r\n                  onChange={this.onChange}\r\n                />\r\n                <span class='focus-input100'></span>\r\n              </div>\r\n              <div\r\n                class='wrap-input100 rs1-wrap-input100 validate-input m-b-20'\r\n                data-validate='Type user name'>\r\n                <input\r\n                  autoComplete='none'\r\n                  id='email'\r\n                  class='input100'\r\n                  type='email'\r\n                  name='email'\r\n                  placeholder='Email Address'\r\n                  onChange={this.onChange}\r\n                />\r\n                <span class='focus-input100'></span>\r\n              </div>\r\n\r\n              <div\r\n                class='wrap-input100 rs2-wrap-input100 validate-input m-b-20'\r\n                data-validate='Type password'>\r\n                <input\r\n                  autoComplete='new-password'\r\n                  class='input100'\r\n                  type='password'\r\n                  name='password'\r\n                  placeholder='Password'\r\n                  onChange={this.onChange}\r\n                />\r\n                <span class='focus-input100'></span>\r\n              </div>\r\n              <div\r\n                class='wrap-input100 rs2-wrap-input100 validate-input m-b-20'\r\n                data-validate='Type password'>\r\n                <input\r\n                  autoComplete='new-password'\r\n                  class='input100'\r\n                  type='password'\r\n                  name='confpassword'\r\n                  placeholder='Confirm password'\r\n                  onChange={this.onChange}\r\n                />\r\n                <span class='focus-input100'></span>\r\n              </div>\r\n            </div>\r\n            <div class='container-login100-form-btn'>\r\n              <input\r\n                type='submit'\r\n                class='login100-form-btn'\r\n                value={this.state.submitText}\r\n              />\r\n            </div>\r\n\r\n            <div class='w-full text-center mt-5 txt1'>\r\n              Already Have an Account ?&nbsp;\r\n              <span\r\n                onClick={() => {\r\n                  console.log(this.props);\r\n                  this.props.updateWidget({ widgetName: 'SIGNIN' });\r\n                }}\r\n                class='txt3 cur-pointer'>\r\n                Sign In\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(SignUp);\r\n","import React from 'react';\r\n\r\nexport default function Error(props) {\r\n  return (\r\n    <div>\r\n      This page is temporarly unavailable\r\n      <button\r\n        onClick={() => {\r\n          props.history.push('/');\r\n        }}>\r\n        GO back to Home Page\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const StoreContext = createContext();\r\n\r\nexport const StoreProvider = (props) => {\r\n  //make it persistance by default data is not persistant\r\n  const user = JSON.parse(localStorage.getItem('user')) || {\r\n    isAuthenticated: false,\r\n    token: null,\r\n  };\r\n  const [store, updateStore] = useState({\r\n    user,\r\n  });\r\n\r\n  return (\r\n    <StoreContext.Provider value={[store, updateStore]}>\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n","import React, { Component, useContext } from 'react';\r\nimport '../../assets/css/signin.css';\r\nimport { SignInUser } from '../../services/Authentication';\r\nimport { withRouter } from 'react-router-dom';\r\nimport logo from '.././../assets/img/logo.png';\r\n\r\nimport '../../assets/css/util.css';\r\nimport '../../assets/css/signin.css';\r\nimport { StoreContext } from '../context/Store';\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      submitText: 'SignIn',\r\n      errors: {\r\n        email: null,\r\n        password: null,\r\n        form: null,\r\n      },\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n    this.isValid = this.isValid.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.changeState = this.changeState.bind(this);\r\n  }\r\n  static contextType = StoreContext;\r\n\r\n  changeState(stateInfo) {\r\n    this.setState(stateInfo);\r\n  }\r\n  validateEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n  isValid() {\r\n    const { email, password, errors } = this.state;\r\n    if (!email || !password) {\r\n      this.setState({\r\n        errors: {\r\n          ...errors,\r\n          form: 'Please fill out required fields',\r\n        },\r\n      });\r\n      return false;\r\n    }\r\n    if (!this.validateEmail(email)) {\r\n      this.setState({\r\n        errors: {\r\n          ...errors,\r\n          form: 'Invalid email Format',\r\n        },\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  login(e) {\r\n    const [store, updateStore] = this.context;\r\n    console.log(store);\r\n    e.preventDefault();\r\n    this.setState({\r\n      submitText: 'Loading',\r\n    });\r\n    if (this.isValid()) {\r\n      const userInfo = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      };\r\n      SignInUser(userInfo, {\r\n        changeState: this.changeState,\r\n        updateStore,\r\n        store,\r\n      });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    const { name, value } = e.target;\r\n    // console.log('name', name, 'val', value);\r\n    this.setState({ [name]: value });\r\n    // console.log(this.state);\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div className='row  ml-0 mr-0 w-100' style={{ background: '#13273B' }}>\r\n        <div className='text-white logo'>\r\n          <img src={logo} className='ml-5 pl-3 ' alt='calendly' />\r\n          Chat Mate\r\n        </div>\r\n        <div class='login100-more back col-lg-7 d-none d-lg-block'>\r\n          <div\r\n            className='row m-auto w-100'\r\n            style={{\r\n              height: '100%',\r\n            }}></div>\r\n        </div>\r\n        <form\r\n          autoComplete='none'\r\n          class='login100-form validate-form col-lg-5 pt-0 pb-0  pl-md-5 pr-md-5 d-flex '\r\n          onSubmit={this.login}>\r\n          <div className='pl-md-5 pr-md-5'>\r\n            <span class='login100-form-title p-b-34'>Account Login</span>\r\n\r\n            <div className='error text-center mb-3'>\r\n              {this.state.errors.form}\r\n            </div>\r\n            <div className=''>\r\n              <div\r\n                class='wrap-input100 rs1-wrap-input100 validate-input m-b-20'\r\n                data-validate='Type user name'>\r\n                <input\r\n                  autoComplete='none'\r\n                  id='email'\r\n                  class='input100'\r\n                  type='email'\r\n                  name='email'\r\n                  placeholder='Email Address'\r\n                  onChange={this.onChange}\r\n                />\r\n                <span class='focus-input100'></span>\r\n              </div>\r\n              <div\r\n                class='wrap-input100 rs2-wrap-input100 validate-input m-b-20'\r\n                data-validate='Type password'>\r\n                <input\r\n                  autoComplete='new-password'\r\n                  class='input100'\r\n                  type='password'\r\n                  name='password'\r\n                  placeholder='Password'\r\n                  onChange={this.onChange}\r\n                />\r\n                <span class='focus-input100'></span>\r\n              </div>\r\n            </div>\r\n            <div class='container-login100-form-btn'>\r\n              <button type='submit' class='login100-form-btn'>\r\n                {this.state.submitText}\r\n              </button>\r\n            </div>\r\n\r\n            {/* <div class='w-full text-center p-t-27 p-b-10 cur-pointer'>\r\n              <span class='txt1'>Forgot&nbsp;</span>\r\n\r\n              <a href='#' class='txt2'>\r\n                password?\r\n              </a>\r\n            </div> */}\r\n\r\n            <div class='w-full text-center txt1 mt-5'>\r\n              New User ? &nbsp;\r\n              <span\r\n                onClick={() => {\r\n                  console.log(this.props);\r\n                  this.props.updateWidget({ widgetName: 'SIGNUP' });\r\n                }}\r\n                class='txt3 cur-pointer'>\r\n                Sign Up\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(SignIn);\r\n","import React, { Component } from 'react';\r\n\r\nimport SignIn from '../signin/SignIn';\r\nimport SignUp from '../signup/SignUp';\r\nclass Widget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widgetName: 'SIGNIN',\r\n    };\r\n    this.updateWidget = this.updateWidget.bind(this);\r\n  }\r\n  updateWidget(widget) {\r\n    this.setState(widget);\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    switch (this.state.widgetName) {\r\n      case 'SIGNIN':\r\n        return <SignIn updateWidget={this.updateWidget} />;\r\n        break;\r\n      case 'SIGNUP':\r\n        return <SignUp updateWidget={this.updateWidget} />;\r\n        break;\r\n\r\n      default:\r\n        return <div>Error</div>;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Landingpage extends Component {\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div class='limiter '>\r\n        <div class='container-fluid vh-100 '>\r\n          <div class='row vh-100'>\r\n            <Widget />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport SignUp from '../components/signup/SignUp';\r\nimport Error from '../components/error/Error';\r\nimport SignIn from '../components/signin/SignIn';\r\nimport Landingpage from '../components/landingpage/Landingpage';\r\nexport default class PublicRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={Landingpage} />\r\n        <Route exact path='/SignUp' component={SignUp} />\r\n        <Route exact path='/SignIn' component={SignIn} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport avatar from '../../assets/img/user.png';\r\nimport './conversation.scss';\r\nexport default function Conversation(props) {\r\n  return (\r\n    <div\r\n      className='row conversation w-100 mr-0 ml-0'\r\n      onClick={() => props.setIsConversationOpen(true)}>\r\n      <div className='col-2 d-flex '>\r\n        <img src={avatar} className='avatar' />\r\n      </div>\r\n      <div className='chat'>\r\n        {/* considering current user as sender and conversation user as receiver */}\r\n        <div className='receiver'>{props.name}</div>\r\n        <div className='last-msg'>Last Message</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nexport default function Messsage(props) {\r\n  return <div className='message card'>{ReactEmoji.emojify(props.msg)}</div>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Messagebox from './Messsage';\r\n\r\nexport default class ConversationBox extends Component {\r\n  constructor() {\r\n    super();\r\n    this.renderMessage = this.renderMessage.bind(this);\r\n  }\r\n\r\n  renderMessage = (conversation) => {\r\n    //let suppose conversation happends between two people\r\n    var conversation = [\r\n      'Hi Raahul',\r\n      'Hi Ravi',\r\n      'Whatts Upp',\r\n      'Hi ',\r\n      'I am Ok ',\r\n      'Thank god',\r\n      'Hi Raahul',\r\n      'Hi Ravi',\r\n      'Whatts Upp',\r\n      'Hi ',\r\n      'I am Ok ',\r\n      'Thank god',\r\n      'Hi Raahul',\r\n      'Hi Ravi',\r\n      'Whatts Upp',\r\n      'Hi ',\r\n      'I am Ok ',\r\n      'Thank god',\r\n      'Hi Raahul',\r\n      'Hi Ravi',\r\n      'Whatts Upp',\r\n      'Hi ',\r\n      'I am Ok ',\r\n      'Thank god',\r\n      'New Feature We can Inset Emoji using Emoji code <3 :p New Feature We can Inset Emoji using Emoji code New Feature We can Inset Emoji using Emoji code',\r\n      'my Emojis :)',\r\n      ':) :( ',\r\n      '(⊙＿⊙)',\r\n    ];\r\n    // TODO pass message and username or user id to differentiate user\r\n\r\n    return conversation.map((message) => {\r\n      return <Messagebox msg={message} />;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>{this.renderMessage()}</React.Fragment>;\r\n  }\r\n}\r\n","import config from '../config/config';\r\nimport React from 'react';\r\nconst AddMeal = async (mealInfo, state, changeState) => {\r\n  // call create user api\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token = user.token;\r\n\r\n  const response = await fetch(config.MEAL_BASE_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + token,\r\n    },\r\n    body: JSON.stringify(mealInfo),\r\n  })\r\n    .then((response) => {\r\n      if (response.status == 401) {\r\n        localStorage.clear();\r\n        window.location.href('/');\r\n      }\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      var errMsg;\r\n      let message = null;\r\n      if (data.error) {\r\n        console.log('error ', data.error);\r\n        message = data.message;\r\n      } else {\r\n        message = <span className='text-success'>{data.message}</span>;\r\n      }\r\n      changeState({ ...state, error: message });\r\n    })\r\n    .catch((error) => {\r\n      console.log('error while adding meal :', error);\r\n      var message = 'Something went wrong!!';\r\n      changeState({\r\n        ...state,\r\n        error: message,\r\n      });\r\n    });\r\n\r\n  // console.log('response', response);\r\n  return response;\r\n};\r\n\r\nconst UpdateMeal = async (payload, state, changeState) => {\r\n  // call create user api\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token = user.token;\r\n\r\n  const response = await fetch(config.MEAL_BASE_URL + '/' + state._id, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + token,\r\n    },\r\n    body: JSON.stringify({ data: payload }),\r\n  })\r\n    .then((response) => {\r\n      if (response.status == 401) {\r\n        localStorage.clear();\r\n        window.location.href('/');\r\n      }\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      var errMsg;\r\n      let message = null;\r\n      if (data.error) {\r\n        console.log('error ', data.error);\r\n        message = data.message;\r\n      } else {\r\n        message = <span className='text-success'>{data.message}</span>;\r\n      }\r\n      changeState({ ...state, error: message });\r\n    })\r\n    .catch((error) => {\r\n      console.log('error while updating meal :', error);\r\n      var message = 'Something went wrong!!';\r\n      changeState({\r\n        ...state,\r\n        error: message,\r\n      });\r\n    });\r\n\r\n  // console.log('response', response);\r\n  return response;\r\n};\r\n\r\n// call delete meal api\r\nconst DeleteMeal = async (state, changeState) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token = user.token;\r\n\r\n  const response = await fetch(config.MEAL_BASE_URL + '/' + state._id, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + token,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.status == 401) {\r\n        localStorage.clear();\r\n        window.location.href('/');\r\n      }\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      console.log('delete meal response ', data);\r\n      var errMsg;\r\n      let message = null;\r\n      if (data.error) {\r\n        console.log('error ', data.error);\r\n        message = data.message;\r\n      } else {\r\n        message = <span className='text-success'>{data.message}</span>;\r\n      }\r\n      changeState({ ...state, error: message });\r\n      setTimeout(() => {\r\n        window.location.href = '/';\r\n      }, 1000);\r\n    })\r\n    .catch((error) => {\r\n      console.log('error while deleting meal :', error);\r\n      // var message = 'Something went wrong!!';\r\n      // changeState({\r\n      //   ...state,\r\n      //   error: message,\r\n      // });\r\n    });\r\n\r\n  // console.log('response', response);\r\n  return response;\r\n};\r\n\r\n//api call to get user meals\r\nconst GetUserMeals = async (changeState, setTotalCaloris) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token = user.token;\r\n\r\n  const response = await fetch(config.MEAL_BASE_URL, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + token,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.status == 401) {\r\n        localStorage.clear();\r\n        window.location.href('/');\r\n      }\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      if (data.hasOwnProperty('error') && !data.error) {\r\n        changeState(data.meals);\r\n\r\n        var count = 0;\r\n        for (let i = 0; i < data.meals.length; i++) {\r\n          count += data.meals[i].calorie;\r\n        }\r\n        setTotalCaloris(count);\r\n      } else {\r\n        console.log('error : Something went wrong');\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log('get meal error ', error);\r\n      //   console.log('error while adding meal :', error);\r\n      //   var message = 'Something went wrong!!';\r\n      //   changeState({\r\n      //     ...state,\r\n      //     error: message,\r\n      //   });\r\n    });\r\n\r\n  // console.log('response', response);\r\n  return response;\r\n};\r\n\r\nconst GetReceivers = async (setReceivers1) => {\r\n  const cur_user = JSON.parse(localStorage.getItem('user'));\r\n  const token = cur_user.token;\r\n\r\n  const response = await fetch(config.USER_BASE_URL, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: 'Bearer ' + token,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.status == 401) {\r\n        localStorage.clear();\r\n        window.location.href('/');\r\n      }\r\n      return response.json();\r\n      //use response.text() if you send text , if you send json then use json()\r\n    })\r\n    .then((data) => {\r\n      console.log('users details', data);\r\n      const receivers = data.filter((user) => {\r\n        return user._id !== cur_user.userInfo._id;\r\n      });\r\n\r\n      setReceivers1(receivers);\r\n    })\r\n    .catch((error) => {\r\n      console.log('Something Went Wrong!! ', error);\r\n    });\r\n\r\n  // console.log('response', response);\r\n  return response;\r\n};\r\n\r\nexport { GetReceivers };\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n// import { StoreContext } from '../context/Store';\r\nimport Conversation from '../conversation/Conversation';\r\nimport '../../assets/css/home.css';\r\nimport avatar from '../../assets/img/sender_avatar.jpg';\r\nimport start_chat from '../../assets/img/start_chat.svg';\r\nimport './chat.scss';\r\nimport ConversationBox from './ConversationBox';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { GetReceivers } from '../../services/util';\r\n\r\nexport default function Home(props) {\r\n  //This state will show default conversation box if it false\r\n  var [isCoversationOpen, setIsConversationOpen] = useState(false);\r\n\r\n  //set message\r\n  const [message, setMessage] = useState('');\r\n  //This state will hold all the list of user that registered in Chat Mate except One who is logined\r\n  const [receivers, setReceivers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    GetReceivers(setReceivers);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   getTodayMeals(userMeals);\r\n  // }, [userMeals]);\r\n\r\n  const getConversations = (receivers) => {\r\n    console.log(receivers);\r\n    return receivers.map((receiver) => {\r\n      return (\r\n        <Conversation\r\n          name={receiver.username}\r\n          otherInfo={receiver}\r\n          setIsConversationOpen={setIsConversationOpen}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const openConversation = () => {\r\n    return <ConversationBox />;\r\n  };\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      //TODO send this message the the current receiver using socket.io\r\n    }\r\n  };\r\n\r\n  const renderDefaultConversationBox = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <img src={start_chat} className='start-chat' />\r\n        </div>\r\n        <div className='text-center'>\r\n          <h3 className='mb-4 mt-2 chatmate-head'>ChatMate Business App</h3>\r\n          <div className='chatmate-desc'>\r\n            ChatMate Connects you with your customers easily by using tools to\r\n            automate, sort and quickly respond to messages. ChatMate can also\r\n            help medium and large businesses provide customer support and\r\n            deliver important notifications to customers.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid pl-0 pr-0'>\r\n      <div className='row w-100 m-0'>\r\n        <div className='col-4 conversation-header '>\r\n          <img src={avatar} className='avatar sender' />\r\n        </div>\r\n        <div className='col-8 chat-header '></div>\r\n      </div>\r\n\r\n      <div className='row w-100 m-0'>\r\n        <div className='col-4  conversation-wrapper pr-0 pl-0'>\r\n          {getConversations(receivers)}\r\n        </div>\r\n        <div className='col-8 chat-wrapper pr-0'>\r\n          {isCoversationOpen && (\r\n            <ScrollToBottom className='chat-limiter'>\r\n              {openConversation()}\r\n            </ScrollToBottom>\r\n          )}\r\n          {!isCoversationOpen && renderDefaultConversationBox()}\r\n          <div class='footer fixed-bottom typing-box'>\r\n            <form className='d-flex'>\r\n              <input\r\n                type='text'\r\n                className='input-msg-box'\r\n                placeholder='Type Message Here'\r\n                value={message}\r\n                onChange={(event) => setMessage(event.target.value)}\r\n                onKeyPress={(event) =>\r\n                  event.key === 'Enter' ? sendMessage(event) : null\r\n                }\r\n              />\r\n              <input\r\n                type='submit'\r\n                value='Send message'\r\n                className='primary-btn ml-4 pl-3 pr-3'\r\n                onClick={(event) => sendMessage(event)}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useContext } from 'react';\r\nimport { StoreContext } from '../context/Store';\r\nimport logo from '../../assets/img/logo.png';\r\nimport '../../assets/css/header.css';\r\n\r\nimport { Logout } from '../../services/Authentication';\r\n\r\nexport default function Header() {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  console.log(store);\r\n  const signOut = () => {\r\n    Logout(store, setStore);\r\n  };\r\n  return (\r\n    <header className='header d-flex justify-content-between'>\r\n      <div className='pull-left pl-4'>\r\n        <a href='/'>\r\n          <img src={logo} className='logo1 ' alt='logo' />\r\n\r\n          <span>\r\n            <span className='health'>Chat</span>\r\n            <span className='beat'>Mate</span>\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <div className='d-flex pr-4'>\r\n        <div className='username text-white mt-auto mb-auto mr-4 text-capitalize d-none d-md-block'>\r\n          Welcome &nbsp;{store.user.userInfo.username}\r\n        </div>\r\n        <div className='logout-btn' onClick={signOut}>\r\n          Sign Out\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/homepage/Home';\r\nimport Error from '../components/error/Error';\r\nimport Header from '../components/homepage/Header';\r\nexport default class PrivateRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n\r\n          <Route component={Error} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nimport PublicRoutes from './config/PublicRoutes';\r\nimport PrivateRoutes from './config/PrivateRoutes';\r\nimport { StoreContext, StoreProvider } from './components/context/Store';\r\n\r\nfunction Route() {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  return (\r\n    <React.Fragment>\r\n      {store.user.isAuthenticated ? <PrivateRoutes /> : <PublicRoutes />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction App(props) {\r\n  const value = useContext(StoreContext);\r\n  console.log(value);\r\n  return (\r\n    <BrowserRouter>\r\n      <StoreProvider>\r\n        <div className='App  '>\r\n          <Route />\r\n        </div>\r\n      </StoreProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.be2cf3cb.png\";","module.exports = __webpack_public_path__ + \"static/media/user.d75f0f17.png\";","module.exports = __webpack_public_path__ + \"static/media/sender_avatar.e67e358c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/start_chat.cd3b9534.svg\";"],"sourceRoot":""}